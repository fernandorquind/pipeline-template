name: Node.js CI

on:
  workflow_call:

jobs:
  build-app-angular:
    runs-on: ubuntu-latest
    env:
      versionAngular: ${{ vars.VERSIONANGULAR }}
    steps:   
      - name: Checkout to project repository 
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          repository: ${{ github.repository }}
          ref: ${{ github.ref_name }}

      - name: Environment Variables 
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: '{'
          tokenSuffix: '}'
          files: '[ "**/environment.ts", "**/environment.certification.ts", "**/environment.prod.ts" ]'
        env:
            SITEKEY_CERT: ${{ secrets.SITEKEY_CERT }}
            SITEKEY_DEV: ${{ secrets.SITEKEY_DEV }}
            SITEKEY_PROD: ${{ secrets.SITEKEY_PROD }}
        
      - name: Use Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: ${{ vars.VERSIONNODE}}.x

      - name: packages node install
        run: |
          if [[ ${{ env.versionAngular }} > 10 ]]; then
            echo "Instalando dependencias de Angular"
            npm i 
          else
            echo "Instalando dependencias de Grunt"
            npm install --save --legacy-peer-deps 
          fi
          
      - name: dependency installation
        run: |
          if [[ ${{ env.versionAngular }} > 10 ]]; then
            echo "Instalando angular cli"
            npm install -g @angular/cli@${{ vars.VERSIONANGULAR }}
            node --version
            npm -version
            npm list @angular/cli
          else
            echo "Instalando grunt cli"
            npm install -g grunt-cli
          fi
          
      - name: application building
        if: ${{ env.versionAngular  > 10 &&  startsWith(github.ref_name, 'feature')}}
        run: npm run build

      - name: application building dev
        if: ${{ github.ref_name == 'develop' }}
        run: |
          if [[ ${{ env.versionAngular }} > 10 ]]; then
            echo "Compilando proyecto con ng"
            ng build --configuration dev #--configuration development
          else
            echo "Compilando proyecto con grunt"
            grunt certification --force
          fi

      - name: application building cert
        if: ${{ startsWith(github.ref_name, 'release') }}
        run: |
          if [[ ${{ env.versionAngular }} > 10 ]]; then
            echo "Compilando proyecto con ng"
            ng build --configuration cert
          else
            echo "Compilando proyecto con grunt"
            grunt certification --force
          fi

      - name: application building prod
        if: ${{ github.ref_name == 'main' }}
        run: |
          if [[ ${{ env.versionAngular }} > 10 ]]; then
            echo "Compilando proyecto con ng"
            ng build --configuration prod
          else
            echo "Compilando proyecto con grunt"
            grunt production --force
          fi

    # Optionally you can use the output from the Quality Gate in another step.
    # The possible outputs of the `quality-gate-status` variable are `PASSED`, `WARN` or `FAILED`.
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: artifact-build
          path: |
            ${{ vars.BUILD }}/
          retention-days: 1

      
